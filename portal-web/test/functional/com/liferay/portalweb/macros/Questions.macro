definition {

	macro _deleteAllQuestions {
		while (IsElementPresent(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS")) {
			LexiconEntry.gotoEllipsisMenuItemNoError(menuItem = "Move to Recycle Bin");

			Alert.viewSuccessMessage();
		}
	}

	macro addQuestionByAPI {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Message Boards");

		MessageboardsCategory.gotoPG(categoryName = "${categoryName}");

		Pause(locator = "3000");

		var categoryId = JSONMBMessage.getCategoryId();

		var rightCategoryId = StringUtil.extractLast("${categoryId}", "CategoryId=");

		JSONQuestionsAPI._addQuestion(
			bodyField = "${bodyField}",
			categoryId = "${rightCategoryId}",
			tagField = "${tagField}",
			titleField = "${titleField}");
	}

	macro addQuestionWithoutTagByAPI {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Message Boards");

		MessageboardsCategory.gotoPG(categoryName = "${categoryName}");

		Pause(locator = "3000");

		var categoryId = JSONMBMessage.getCategoryId();

		var rightCategoryId = StringUtil.extractLast("${categoryId}", "CategoryId=");

		JSONQuestionsAPI._addQuestionWithoutTag(
			bodyField = "${bodyField}",
			categoryId = "${rightCategoryId}",
			titleField = "${titleField}");
	}

	macro addTags {
		Type(
			locator1 = "Questions#ASK_QUESTION_TAG_FIELD",
			value1 = "${tagLocator}");

		KeyPress(
			locator1 = "Questions#ASK_QUESTION_TAG_FIELD",
			value1 = "\RETURN");
	}

	macro askQuestionFillingTheMandatoryFields {
		Click(locator1 = "Questions#ASK_QUESTION_BUTTON");

		if (isSet(anonymousUser)) {
			Type.typePause(
				locator1 = "TextInput#EMAIL_ADDRESS",
				value1 = "${userEmailAddress}");

			Type.typePause(
				locator1 = "TextInput#PASSWORD",
				value1 = "${password}");

			Click(locator1 = "Button#SIGN_IN");
		}

		Type(
			locator1 = "Questions#ASK_QUESTION_TITLE_FIELD",
			value1 = "${titleField}");

		CKEditor.addContent(content = "${kbArticleContent}");
	}

	macro changeDisplayStyle {
		Click(locator1 = "Questions#CREATE_QUESTIONS_DISPLAY_STYLE_SELECTOR");

		MenuItem.click(menuItem = StringUtil.upperCaseFirstLetter("${displayStyle}"));
	}

	macro changePagination {
		Click(locator1 = "Questions#ITEMS_PER_PAGE_SELECT");

		var key_itemsPerPage = "${itemsPerPage}";

		MenuItem.click(menuItem = "${itemsPerPage}");

		AssertTextEquals.assertPartialText(
			locator1 = "Questions#ITEMS_PER_PAGE_SELECT",
			value1 = "${itemsPerPage}");
	}

	macro clearSearchResults {
		Click(locator1 = "Questions#SEARCH_RESULTS_CLEAR_BUTTON");

		AssertElementNotPresent(locator1 = "Search#SEARCH_INFO");

		AssertElementNotPresent(locator1 = "Questions#SEARCH_RESULTS_CLEAR_BUTTON");
	}

	macro configureFilter {
		Click(locator1 = "Questions#QUESTIONS_SELECT_FILTER");

		Pause(locator1 = "1000");

		Click(
			key_filter = "${filterBy}",
			locator1 = "Questions#QUESTIONS_SELECT_FILTER_VALUE");

		Pause(locator1 = "1000");
	}

	macro createSomethingInMessageBoards {
		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "${menuItem}");

		Questions.fillName(nameField = "${nameField}");

		Questions.changeDisplayStyle(displayStyle = "${displayStyleOption}");

		Button.clickSave();
	}

	macro fillName {
		Click(locator1 = "Questions#CREATE_QUESTIONS_NAME_FIELD");

		Type(
			locator1 = "Questions#CREATE_QUESTIONS_NAME_FIELD",
			value1 = "${nameField}");
	}

	macro gotoCategory {
		Click(
			key_questionNameField = "${categoryName}",
			locator1 = "Questions#QUESTIONS_NAME_FIELD");
	}

	macro gotoDetails {
		Click(
			key_questionTitle = "${questionTitle}",
			locator1 = "Questions#QUESTIONS_TITLE");

		AssertElementPresent(
			key_questionTabField = "${questionTabField}",
			locator1 = "Questions#QUESTIONS_LIST_ACTIVE_TAB_FIELD");
	}

	macro gotoTab {
		Click(
			key_questionTabField = "${questionTabField}",
			locator1 = "Questions#QUESTIONS_LIST_TAB_FIELD");

		AssertElementPresent(
			key_questionTabField = "${questionTabField}",
			locator1 = "Questions#QUESTIONS_LIST_ACTIVE_TAB_FIELD");
	}

	macro search {
		if (isSet(searchTag)) {
			Type(
				locator1 = "Questions#SEARCH_QUESTION_FIELD",
				value1 = "${searchKey}");
		}
		else {
			Type(
				locator1 = "Questions#SEARCH_QUESTION_FIELD",
				value1 = "${searchKey}");

			AssertTextEquals(
				locator1 = "Search#SEARCH_INFO",
				value1 = "${resultsInfo}");

			AssertVisible(locator1 = "Questions#SEARCH_RESULTS_CLEAR_BUTTON");
		}
	}

	macro tearDown {
		while (IsElementPresent(locator1 = "Questions#QUESTIONS_LIST")) {
			Questions._deleteAllQuestions();
		}

		AssertElementNotPresent(locator1 = "Questions#QUESTIONS_LIST");
	}

	macro viewFilterResults {
		AssertTextEquals(
			key_questionTitle = "${questionTitle}",
			locator1 = "Questions#QUESTIONS_TITLE",
			value1 = "${questionTitle}");

		AssertTextEquals(
			key_lastQuestionTitle = "${lastQuestionTitle}",
			locator1 = "Questions#QUESTIONS_TITLE_LAST",
			value1 = "${lastQuestionTitle}");
	}

	macro viewNoSearchResults {
		for (var questionTitle : list "${questionsList}") {
			AssertElementNotPresent(
				key_questionTitle = "${questionTitle}",
				locator1 = "Questions#QUESTIONS_TITLE");
		}
	}

	macro viewPaginationResults {
		AssertTextEquals(
			locator1 = "Questions#PAGINATION_RESULTS",
			value1 = "${results}");
	}

	macro viewSearchResults {
		for (var questionTitle : list "${questionsList}") {
			AssertTextEquals(
				key_questionTitle = "${questionTitle}",
				locator1 = "Questions#QUESTIONS_TITLE",
				value1 = "${questionTitle}");
		}
	}

}