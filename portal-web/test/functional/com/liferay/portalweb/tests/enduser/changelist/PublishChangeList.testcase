@component-name = "portal-change-list"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Change List";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		GlobalMenu.gotoPortlet(
			category = "Change Lists",
			panel = "Applications",
			portlet = "Settings");

		ChangeList.enableChangeList();

		ChangeList.createNewPublication(publicationName = "Publication Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			GlobalMenu.gotoPortlet(
				category = "Change Lists",
				panel = "Applications",
				portlet = "Settings");

			ChangeList.disableChangeList();
		}
	}

	@priority = "5"
	test PublishPublication {
		property test.name.skip.portal.instance = "PublishChangeList#PublishPublication";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "Web Content Title");

		PortletEntry.publish();

		ChangeList.publishPublication(publicationName = "Publication Name");

		ChangeList.viewPublishedPublicationDetails(
			publicationName = "Publication Name",
			publicationPublishedBy = "Test Test");

		AssertTextPresent(
			key_publicationName = "Production",
			locator1 = "ChangeList#CHANGE_LIST_INDICATOR_TITLE",
			value1 = "Production");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		AssertElementPresent(
			key_webContentTitle = "Web Content Title",
			locator1 = "WC#ENTRY_LIST_TITLE");
	}

}