@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Content Page Name",
				type = "content");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a use case for for LPS-111548. Reloading the page will clean all Undo states."
	@priority = "4"
	test ConfigureHeadingFragmentAndRefreshPageWithUndoEnabled {
		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.waitForAutoSave();

		AssertVisible(
			key_text = "undo",
			locator1 = "Icon#ANY_ENABLED");

		PageEditor.gotoConfiguration(fragmentName = "Heading");

		PageEditor.configureFragment(textAlign = "Center");

		PageEditor.viewFragmentStyle(
			alignment = "center",
			fragmentName = "heading");

		Refresh();

		AssertElementPresent(
			key_text = "undo",
			locator1 = "Icon#ANY_DISABLED");
	}

	@description = "This is a test for LPS-111946. Undo can bring deleted fragments and widgets back."
	@priority = "5"
	test UndoDeletedFragmentAndWidgetInPage {
		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Button");

		PageEditor.addWidget(
			portletName = "Asset Publisher",
			targetFragmentName = "Button");

		PageEditor.removeFragment(fragmentName = "Button");

		Click(
			key_text = "undo",
			locator1 = "Icon#ANY");

		PageEditor.viewFragment(fragmentName = "Button");

		PageEditor.removeFragment(fragmentName = "Asset Publisher");

		Click(
			key_text = "undo",
			locator1 = "Icon#ANY");

		PageEditor.viewFragment(fragmentName = "Asset Publisher");
	}

	@description = "This is a test for LPS-111946. Undo can bring deleted composition of fragments back."
	@priority = "5"
	test UndoDeletedFragmentComposition {
		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Layout Elements",
			fragmentName = "Container");

		Click(
			key_elementType = "Container",
			key_position = "1",
			locator1 = "PageEditor#LAYOUT_ELEMENTS_HEADER");

		DragAndDrop.javaScriptDragAndDropToObject(
			key_collectionName = "Layout Elements",
			key_fragmentName = "Row",
			key_position = "1",
			locator1 = "PageEditor#FRAGMENTS_AND_WIDGETS_TAB_FRAGMENT",
			locator2 = "PageEditor#CONTAINER_CONTAINER",
			value1 = "");

		PageEditor.removeFragmentViaPageStructure(fragmentName = "Container");

		PageEditor.viewNoFragment(fragmentName = "Container");

		Click(
			key_text = "undo",
			locator1 = "Icon#ANY");

		PageEditor.viewFragment(fragmentName = "Container");
	}

	@description = "This is a test for LPS-111946. Undo can bring deleted Collection Display with collection items back."
	@priority = "3"
	test UndoDeletedFragmentWithCollection {
		for (var i : list "1,2,3") {
			JSONWebcontent.addWebContent(
				content = "WC WebContent Content ${i}",
				groupName = "Test Site Name",
				title = "WC WebContent Title ${i}");
		}

		JSONAssetlist.addDynamicAssetListEntry(
			groupName = "Test Site Name",
			title = "Dynamic Asset List Test");

		AssetListsAdmin.openAssetListsAdmin(siteURLKey = "test-site-name");

		AssetListsAdmin.editAssetList(assetListTitle = "Dynamic Asset List Test");

		AssetListsAdmin.configureAssetEntryType(selectedAsset = "Web Content Article");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Content Display",
			fragmentName = "Collection Display");

		PageEditor.editCollectionDisplay(
			assetListName = "Dynamic Asset List Test",
			fragmentName = "Collection Display");

		PageEditor.removeFragment(fragmentName = "Collection Display");

		Click(
			key_text = "undo",
			locator1 = "Icon#ANY");

		PageEditor.viewFragment(fragmentName = "Collection Display");

		for (var i : list "1,2,3") {
			if ("${i}" == "1") {
				AssertVisible(
					key_colPosition = "1",
					key_entryTitle = "WC WebContent Title 3",
					key_fragmentName = "Collection Display",
					key_rowPosition = "${i}",
					locator1 = "PageEditor#COLLECTION_ITEM_TITLE");
			}
			if ("${i}" == "2") {
				AssertVisible(
					key_colPosition = "1",
					key_entryTitle = "WC WebContent Title ${i}",
					key_fragmentName = "Collection Display",
					key_rowPosition = "${i}",
					locator1 = "PageEditor#COLLECTION_ITEM_TITLE");
			}
			if ("${i}" == "3") {
				AssertVisible(
					key_colPosition = "1",
					key_entryTitle = "WC WebContent Title 1",
					key_fragmentName = "Collection Display",
					key_rowPosition = "${i}",
					locator1 = "PageEditor#COLLECTION_ITEM_TITLE");
			}
		}
	}

	@description = "This is a test for LPS-111946. Undo can bring deleted fragments with custom configuration back."
	@priority = "4"
	test UndoDeletedFragmentWithCustomConfiguration {
		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Tabs");

		PageEditor.gotoConfiguration(fragmentName = "Tabs");

		PageEditor.configureFragment(numberOfTabs = "2");

		Click.clickNoMouseOver(
			key_elementType = "Fragment",
			locator1 = "PageEditor#FRAGMENT_BODY_TOOLBAR_CONFIGURATION_BUTTON");

		AssertVisible(
			key_navItem = "Tab 2",
			locator1 = "Fragment#NAV_ITEM_TAB");

		AssertElementNotPresent(
			key_navItem = "Tab 3",
			locator1 = "Fragment#NAV_ITEM_TAB");

		PageEditor.removeFragment(fragmentName = "Tabs");

		Click(
			key_text = "undo",
			locator1 = "Icon#ANY");

		PageEditor.viewFragment(fragmentName = "Tabs");

		AssertVisible(
			key_navItem = "Tab 2",
			locator1 = "Fragment#NAV_ITEM_TAB");

		AssertElementNotPresent(
			key_navItem = "Tab 3",
			locator1 = "Fragment#NAV_ITEM_TAB");
	}

	@description = "This is a test for LPS-111946. Undo can bring deleted fragments with edited inline content back."
	@priority = "4"
	test UndoDeletedFragmentWithInlineContent {
		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "New editable fragment text");

		PageEditor.removeFragment(fragmentName = "Heading");

		Click(
			key_text = "undo",
			locator1 = "Icon#ANY");

		PageEditor.viewFragment(fragmentName = "Heading");

		AssertTextEquals(
			key_fragmentName = "heading",
			locator1 = "Fragment#FRAGMENT_BASIC_COMPONENT",
			value1 = "New editable fragment text");
	}

	@description = "This is a test for LPS-111946. Undo can bring deleted fragments with mapped content back."
	@priority = "3"
	test UndoDeletedFragmentWithMappedContent {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "HTML");

		PageEditorMapping.gotoEditableFieldMapping(
			fragmentName = "HTML",
			id = "element");

		PageEditorMapping.mapEditableFieldToAsset(
			entryTitle = "WebContent Title",
			navItem = "Web Content");

		Select(
			locator1 = "PageEditorEditableLink#FIELD",
			value1 = "Title");

		PageEditor.removeFragment(fragmentName = "HTML");

		Click(
			key_text = "undo",
			locator1 = "Icon#ANY");

		PageEditor.viewFragment(fragmentName = "HTML");

		AssertVisible(
			key_content = "WC WebContent Title",
			key_fragmentClass = "content",
			key_position = "1",
			locator1 = "Fragment#FRAGMENT");
	}

	@description = "This is a test for LPS-111548. Undo can make the page editor come back to previous state up to X last states when the page has X states that is less than 20."
	@priority = "5"
	test UndoPagechangeThreeTimes {
		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Layout Elements",
			fragmentName = "Row");

		PageEditor.viewRowStyle(
			columnCount = "3",
			position = "1");

		PageEditor.editLayoutRow(columnCount = "1");

		PageEditor.viewRowStyle(
			columnCount = "1",
			position = "1");

		Click.clickNoMouseOver(
			key_elementType = "Row",
			locator1 = "PageEditor#FRAGMENT_BODY_TOOLBAR_CONFIGURATION_BUTTON");

		PageEditor.editLayoutRow(columnCount = "2");

		PageEditor.viewRowStyle(
			columnCount = "2",
			position = "1");

		Click(
			key_text = "undo",
			locator1 = "Icon#ANY");

		PageEditor.viewRowStyle(
			columnCount = "1",
			position = "1");

		Click(
			key_text = "undo",
			locator1 = "Icon#ANY");

		PageEditor.viewRowStyle(
			columnCount = "3",
			position = "1");

		Click(
			key_text = "undo",
			locator1 = "Icon#ANY");

		AssertElementPresent(
			key_text = "undo",
			locator1 = "Icon#ANY_DISABLED");
	}

	@description = "This is a use case for for LPS-111548. Undo can make the page editor come back to previous state up to 20 last states when the page has more than 20 states."
	@priority = "5"
	test UndoPagechangeTwentyTimes {
		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Tabs");

		for (var i : list "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20") {
			PageEditor.gotoConfiguration(fragmentName = "Tabs");

			PageEditor.configureFragment(numberOfTabs = "${i}");

			Click.clickNoMouseOver(
				key_elementType = "Fragment",
				locator1 = "PageEditor#FRAGMENT_BODY_TOOLBAR_CONFIGURATION_BUTTON");
		}

		for (var i : list "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20") {
			Click(
				key_text = "undo",
				locator1 = "Icon#ANY");
		}

		AssertVisible(
			key_navItem = "Tab 4",
			locator1 = "Fragment#NAV_ITEM_TAB");

		AssertElementNotPresent(
			key_navItem = "Tab 5",
			locator1 = "Fragment#NAV_ITEM_TAB");

		AssertElementPresent(
			key_text = "undo",
			locator1 = "Icon#ANY_DISABLED");
	}

}